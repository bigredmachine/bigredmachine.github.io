<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on Ian&#39;s Blog</title>
    <link>https://bigredmachine.github.io/categories/development/</link>
    <description>Recent content in Development on Ian&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 31 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://bigredmachine.github.io/categories/development/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Sitecore Log4Net Lockup - Hotfix</title>
      <link>https://bigredmachine.github.io/post/sitecore-log4net-lock-up/</link>
      <pubDate>Sun, 31 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://bigredmachine.github.io/post/sitecore-log4net-lock-up/</guid>
      <description>Sitecore Log4Net Lockup - Hotfix &amp;amp; Don&amp;rsquo;t Share Appenders This post is about a very rare elusive bug that caused the affected Sitecore instance to freeze up, as well not log anything which gave a clue what the problem was.
It was a combination of a bug in the Sitecore Log4Net code and additional Log4Net configuration that had been added (not OOTB) that caused Sitecore to lock up.
 If you haven&amp;rsquo;t seen this issue, where a Sitecore instance locks up and you needed to restart IIS/Server, you probably won&amp;rsquo;t need this hotfix, but hopefully will get this hotfix rolled into a future version of Sitecore, so you&amp;rsquo;ll get the benefit then of hopefully never seeing this bug.</description>
    </item>
    
    <item>
      <title>Precompiled Razor Views</title>
      <link>https://bigredmachine.github.io/post/sitecore-precompiled-razor-views-fix/</link>
      <pubDate>Sun, 02 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bigredmachine.github.io/post/sitecore-precompiled-razor-views-fix/</guid>
      <description>Precompiled Razor Views - Sitecore 9 - Issue 192470 &amp;amp; 119596 There are already some posts on this topic of using Precompiled Razor Views, so I won&amp;rsquo;t duplicate that content.
Kam&amp;rsquo;s blog - Precompiled Views supported by Sitecore since Sitecore 8.2
Jeremy&amp;rsquo;s blog - possible side affect of Precompiled Views
Chris&amp;rsquo;s blog - Slow compilation when using MVC areas/Helix folder structure
Matt&amp;rsquo;s blog - ensuring your razor view paths are unique</description>
    </item>
    
    <item>
      <title>Sitecore MVP 2020 - Technology</title>
      <link>https://bigredmachine.github.io/post/mvp-2020/</link>
      <pubDate>Sat, 01 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bigredmachine.github.io/post/mvp-2020/</guid>
      <description>Sitecore MVP 2020 - Technology I&amp;rsquo;m thankful to receive my 1st Sitecore MVP award in the Technology category for 2020.
    I&amp;rsquo;ve been using Sitecore since Sitecore 6 in 2011.
Keep sharing and trying if didn&amp;rsquo;t make it this year, this is my first year I&amp;rsquo;ve been fortunate enough to be selected for the MVP award after several years of applying. Although it&amp;rsquo;s not enough to just keep on applying, you can&amp;rsquo;t get the award if you don&amp;rsquo;t apply, and you might get some feedback what you need to improve upon.</description>
    </item>
    
    <item>
      <title>Improving the Siteore Solr Content Search Provider</title>
      <link>https://bigredmachine.github.io/post/improving-the-solr-content-search-provider/</link>
      <pubDate>Tue, 26 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://bigredmachine.github.io/post/improving-the-solr-content-search-provider/</guid>
      <description>Improving the Siteore Solr Content Search Provider Back in February this year I gave a presentation at the London Sitecore User Group &amp;ldquo;Improving the Solr Content Search Provider&amp;rdquo;.
My first talk at a Sitecore User group.
Although I regularly attend the Sitecore discussion club, and have presented there on several occasions.
Known bugs At the presentation I included a link to a github repository with a list of known issues and their public reference numbers.</description>
    </item>
    
    <item>
      <title>Federated Authentication Single Sign Out</title>
      <link>https://bigredmachine.github.io/post/federated-authentication-single-sign-out/</link>
      <pubDate>Sun, 24 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://bigredmachine.github.io/post/federated-authentication-single-sign-out/</guid>
      <description>Federated Authentication Single Sign Out By default when you sign out of Sitecore, you don&amp;rsquo;t get signed out of your Federated Authentication Provider (Tested against Sitecore 9.0). So if after you sign out, you try to sign in again, your Federated Authentication Provider still recognises you and doesn&amp;rsquo;t challenge you to sign back in again, and lets you into the system.
So have you really signed out, if you haven&amp;rsquo;t signed out of the Federated Authentication provider as well?</description>
    </item>
    
    <item>
      <title>Sitecore 9.3 - media library blob storage</title>
      <link>https://bigredmachine.github.io/post/sitecore-9-dot-3-media-library-blob-storage/</link>
      <pubDate>Sun, 24 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://bigredmachine.github.io/post/sitecore-9-dot-3-media-library-blob-storage/</guid>
      <description>Sitecore 9.3 - Media Library Azure Blob Storage Pieter Brinkman put out this tweet after Sitecore Symposium, with some information about Sitecore 9.3, for those of us not able to attend Symposium and see his session.
#SitecoreSYM is a wrap, now time to fire-up that blog engine. A lot to share around the upcoming #Sitecore 9.3 release. As a gesture of good will -&amp;gt; the deck is now available on https://t.</description>
    </item>
    
    <item>
      <title>Java goes commercial, what does this mean for Sitecore - Solr?</title>
      <link>https://bigredmachine.github.io/post/java-comercial-sitecore-solr-future/</link>
      <pubDate>Sat, 15 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://bigredmachine.github.io/post/java-comercial-sitecore-solr-future/</guid>
      <description>Oracle to start charging for Java I&amp;rsquo;ve been following this update for Java for many months since initally seeing the popup warning when updating Java on my local machine. And now finally getting around to blog about it, now the options have become clearer. And finding that some people still aren&amp;rsquo;t aware about the pending update in January 2019 that will mean will require a commercial Java licence if you want any further security updates from the Oracle version of Java.</description>
    </item>
    
    <item>
      <title>Why Sticky Session on Sitecore Content Authoring</title>
      <link>https://bigredmachine.github.io/post/why-inproc-session-state-required-on-authoring/</link>
      <pubDate>Sat, 15 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://bigredmachine.github.io/post/why-inproc-session-state-required-on-authoring/</guid>
      <description>Why have to use InProc session state on Sitecore Content Authoring A note on why InProc session state &amp;amp; sticky sessions must be used for Sitecore Content Authoring. The official Sitecore documentation was mentioning that Content Authoring could use a shared session state provider, but after testing, and being in contact with Sitecore support this documentation was update to reflect reality at the moment.
https://kb.sitecore.net/articles/860809
Bad Practice to use Sticky Sessions A quick intro on why Sticky Sessions are bad.</description>
    </item>
    
    <item>
      <title>Zero down time for Delivery &amp; Authoring</title>
      <link>https://bigredmachine.github.io/post/zero-content-authoring-down-time/</link>
      <pubDate>Sat, 15 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://bigredmachine.github.io/post/zero-content-authoring-down-time/</guid>
      <description>Zero down time for Delivery &amp;amp; Authoring A lot of people talk about zero downtime, but normally just in the context of Content Delivery. Either with Azure PAAS websites and swapping slots, or using Azure Traffic Manager to switch over to a different load balancer/set of VMs.
However one of my colleagues found this article, to achieve Zero* downtime for Content Authoring.
https://sitecorepocs.blogspot.com/2016/06/sitecore-zero-downtime-deployments.html
*Or as near to Zero as possible as the users Session state will expire, as Sitecore requires InProc session state provider on Content Authoring.</description>
    </item>
    
    <item>
      <title>What Is Wrong With the Link Database</title>
      <link>https://bigredmachine.github.io/post/what-is-wrong-with-the-link-database/</link>
      <pubDate>Tue, 20 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://bigredmachine.github.io/post/what-is-wrong-with-the-link-database/</guid>
      <description>Sitecore (Fast) Queries There&amp;rsquo;s quite a few blog posts on avoiding using (fast) Sitecore queries on Content Delivery.
 https://blog.rauljimenez.co.uk/not-so-fast/ https://intothecloud.blog/2018/10/21/It-s-time-to-put-fast-query-to-rest/ https://blog.coates.dk/2014/11/19/sitecore-fast-query-syntax-can-kill-your-sql-server-or-website/ http://intothecore.cassidy.dk/2016/05/sitecore-decennial-series-2-dont.html  Summary Fast always goes to the database, and even a normal Sitecore query can go from being a slow page, to bringing your site to it&amp;rsquo;s knees if that page is hit frequently enough.
I&amp;rsquo;ve had experience of this on inheriting a solution which would do three sitecore queries on a page load for calendar events, for items within a folder.</description>
    </item>
    
    <item>
      <title>Sitecore 9 Index Slow Down - fix</title>
      <link>https://bigredmachine.github.io/post/sitecore-9-index-slow-down/</link>
      <pubDate>Tue, 30 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://bigredmachine.github.io/post/sitecore-9-index-slow-down/</guid>
      <description>Following an upgrade to Sitecore 9.0 update 2, from Sitecore 8.2 update 6, spotted that index rebuilds of the default indexes Core, Web &amp;amp; Master were taking much longer than they were before.
Talking to rebuild these 3 index in parallel under 50 mins in Sitecore 8.2, now taking over 6 hours in Sitecore 9 (sometime 20 hours+), for ~1/4 million items in each of the web and master databases.</description>
    </item>
    
    <item>
      <title>Speeding up sitecore crawling</title>
      <link>https://bigredmachine.github.io/post/speeding-up-sitecore-crawling/</link>
      <pubDate>Sat, 10 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://bigredmachine.github.io/post/speeding-up-sitecore-crawling/</guid>
      <description>Recently I was looking at building a sitecore search domain index (See Domain vs God index), which had quite a few calculated fields. Lots of the calculated fields were based off similar information about the parent nodes of the current item. And for each calculated field I was performing the same look ups again and again per field on the item.
I thought there has got to be a way to improve this, and found a forum post back from 2015 of someone asking the same question, and with a response of someone else who had solved it for one of the projects they were working on.</description>
    </item>
    
    <item>
      <title>Logic App, Azure Function, Get Tweets Sentiment and Aggregate into an email</title>
      <link>https://bigredmachine.github.io/post/logic-app-azure-function-twitter/</link>
      <pubDate>Fri, 09 Feb 2018 20:49:38 +0000</pubDate>
      
      <guid>https://bigredmachine.github.io/post/logic-app-azure-function-twitter/</guid>
      <description>Fun with logic apps, Azure functions and twitter While studying for the Microsoft 70-532 exam, I wanted to take a look at Azure functions &amp;amp; Logics apps.
Having gone through this example &amp;ldquo;Create a function that integrates with Azure Logic Apps&amp;rdquo;
It left me with some questions on how to improve it. E.g. I don&amp;rsquo;t want to receive an email per tweet.
So after some searching, I came across a new feature called batching &amp;ldquo;Send, receive, and batch process messages in logic apps&amp;rdquo; but even after the batch had been reached, each message in the batch would result in an individual email.</description>
    </item>
    
    <item>
      <title>updating to Visual Studio 2015 RC</title>
      <link>https://bigredmachine.github.io/post/updating-to-vs-rc/</link>
      <pubDate>Mon, 25 May 2015 16:18:02 +0000</pubDate>
      
      <guid>https://bigredmachine.github.io/post/updating-to-vs-rc/</guid>
      <description>Updating from VS2015 CTP6 to RC A number of changes have been made to names.
Watch this for further details:
Video: ASP.NET 5 Community Standup - Mar 10th, 2015 - The Big Rename
Key slides:
  If you install visual studio, the DNVM and DNX will be setup for you.
To install Visual Studio RC, first uninstall visual studio CTP 6.
If you aren&amp;rsquo;t installing visual studio, and want to use the command line to install .</description>
    </item>
    
    <item>
      <title>setting up Visual Studio 2015 CTP 6</title>
      <link>https://bigredmachine.github.io/post/setting-up-visual-studio-2015-ctp-6/</link>
      <pubDate>Sun, 08 Mar 2015 11:28:58 +0000</pubDate>
      
      <guid>https://bigredmachine.github.io/post/setting-up-visual-studio-2015-ctp-6/</guid>
      <description>Goals  To setup Visual Studio 2015 to run an asp.net vNext website Rather than using an Azure pre-configured VM, I wanted to setup Visual Studio on my own hardware.  How to do it/What I learnt Reading the Release Notes
 NOTE: Visual Studio 2015 CTPs are for testing and feedback purposes only. This release is unsupported and are not intended for use on production computers, or to create production code.</description>
    </item>
    
  </channel>
</rss>
